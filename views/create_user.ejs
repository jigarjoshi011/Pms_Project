<%- include("dashboard") -%>
<style>
  * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: 'Alkatra', cursive;
  }

  #sign-form {
    width: 50%;
    height: 100%;
    margin: 10vh auto;
    /* background-color: brown; */
    padding: 5%;
  }

  label:not(label:first-of-type) {
    display: block;
    margin: 15px 0 5px 0;
    font-size: 14px;
  }

  .sentence-agree {
    display: inline;
    font-size: 14px;
  }

  #submit {
    display: block;
    width: 100%;
    height: 30px;
    padding: 0 20px;
    background-color: #333399 !important;
    color: #fff !important;
    font-size: 1rem;
    cursor: pointer;
  }

  #submit:hover {
    background-color: #23236a !important;
  }

  div.hr-left,
  div.hr-right {
    width: 30%;
    height: 1px;
    background-color: #cccccc;
  }

  p.guide-google {
    font-size: 14px;
    color: #cccccc;
    width: 40%;
    margin: auto 5px;
  }

  input:not(input#terms-agree) {
    background-color: #fff;
    width: 100%;
    height: 45px;
    padding-left: 20px;
    border: 1px solid #cccccc;
    border-radius: 30px;
    color: #333399;
  }

  input:focus {
    outline: 1px solid #333399;
  }

  .google-sign-btn {
    width: 100%;
    height: 45px;
    border: 1px solid #cccccc;
    border-radius: 30px;
    outline: none;
    background-color: #fff;
    font-size: 1rem;
    cursor: pointer;
  }

  .google-sign-btn:hover {
    background-color: #cccccc;
  }

  i.fa-google {
    font-size: 25px;
    margin-right: 5px;
    vertical-align: middle;
    color: #333399;
  }

  .form-caption {
    color: #737373;
    margin-bottom: 30px;
  }

  .star-required {
    color: #333399;
  }

  input[type='checkbox'] {
    margin: 30px 0 30px 0;
    accent-color: #333399;
  }

  a {
    color: #333399;
    text-decoration: none;
    font-size: 14px;
  }

  a:hover {
    color: #23236a;
  }

  .have-account-line {
    margin: 30px 0 30px 0;
    font-size: 14px;
  }

  .info {
    color: #737373;
    font-size: 14px;
  }

  .google-guide-container {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 20px 0;
  }
</style>

<body>
  <div class="container my-0" id="CreateUser"></div>
</body>
<script>
  async function fetchForm() {
    let id = 1;
    const allR = await fetch(`/dashboard/user/allrole/${id}`);
    const some2 = await allR.json();
    const AllRoles = some2.data;
    let html = ``;
    let htmlSegment = `
        <form
      class="sign-form my-0"
      id="sign-form"
      autocomplete="on"
      onsubmit="return submitForm(event, this)"
    >
      <h1 class="form-title">Add-User</h1>
      <p class="form-caption">See your growth and get consulting support!</p>

      <br />

      <label for="username">Name<span class="star-required">*</span></label>
      <input
        type="text"
        name="name"
        id="username"
        placeholder="Name"
        required
      />

      <label for="email">Email<span class="star-required">*</span></label>
      <input
        type="email"
        name="email"
        id="email"
        placeholder="mail@website.com"
        required
      />
      <label for="password"
          >Password<span class="star-required">*</span></label
        >
        <input
          type="password"
          name="password"
          id="password"
          placeholder="Min. 8 character"
          required
        />

      <label for="password">Role<span class="star-required">*</span></label>
      <select required
        class="p-2 mx-1 rounded-pill text-center"
        name="Selected_role"
        id="Select_role"
        style="width: 230px"
      >
        <option value="Select Role" selected disabled>Select Role</option>
        ${AllRoles.map((data) => {
          if (data.id != 1)
            return `<option  value=${data.name}>${data.name}</option>`;
        }).join(',')}
      </select>

      <br />

      <input class="my-5" type="submit" value="Add-User" id="submit" />

      <p class="info">&copy;2023 Jigar Joshi All rights reserved.</p>
    </form>`;
    html += htmlSegment;
    let container = document.querySelector('#CreateUser');
    container.innerHTML = html;
  }
  fetchForm();
  async function submitForm(e, form) {
    e.preventDefault();

    console.log('i am submitting');
    var card = document.getElementsByName('Selected_role')[0].value;
    if (card != 'Select Role') {
      const submitForm = await fetch(`/dashboard/user/addUser`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name: form.name.value,
          email: form.email.value,
          password: form.password.value,
          role: card,
        }),
      });
      const results = await submitForm.json();
      console.log(results);
      if (results.status == 200) {
        const Toast2 = Swal.mixin({
          toast: true,
          position: 'top',
          showConfirmButton: false,
          timer: 2000,
          timerProgressBar: true,

          didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer);
            toast.addEventListener('mouseleave', Swal.resumeTimer);
          },
        });
        location.assign('/dashboard/listUsers');

        Toast2.fire({
          icon: 'success',
          title: `${results.message} `,
        });
      }
    } else {
      const Toast2 = Swal.mixin({
        toast: true,
        position: 'top',
        showConfirmButton: false,
        timer: 2000,
        timerProgressBar: true,

        didOpen: (toast) => {
          toast.addEventListener('mouseenter', Swal.stopTimer);
          toast.addEventListener('mouseleave', Swal.resumeTimer);
        },
      });

      Toast2.fire({
        icon: 'error',
        title: `Please Select Role`,
      });
    }
  }
</script>
