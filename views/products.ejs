<%- include("dashboard") -%>
    <div class="container">
        <div class="blur-ui p-3 pb-0 bg-gray">
            <h4 class="text-black ">Products</h4>
            <ul class="nav nav-tabs">
                <li class="nav-item w-50 text-center all-center">
                    <a class="nav-link w-100 fw-600 active" data-bs-toggle="tab" href="#View-Products" id="VP"
                        onclick="ViewProducts()">
                        <span>
                            View Products
                        </span>

                    </a>
                </li>
                <li class="nav-item w-50 text-center all-center">
                    <a class="nav-link w-100 fw-600 " data-bs-toggle="tab" href="# Add-Product" id="AP"
                        onclick="AddProducts()">
                        <span>
                            Add Product
                        </span>
                    </a>
                </li>
            </ul>
        </div>
        <div class="addProduct">

        </div>
        <div class="viewProduct">

        </div>
    </div>
    <script>
        let catData = ""
        async function ViewProducts() {
            let ccontainer = document.querySelector('.addProduct');
            let viewCon = document.querySelector('.viewProduct');
            viewCon.innerHTML = catData
            ccontainer.innerHTML = '';
            const rec = await fetch('/product/getProducts');
            const userRecord = await rec.json();
            if (userRecord.status == 200 && userRecord.data) {

                let allUserRecord = []
                allUserRecord = userRecord.data.data
                console.log("ðŸš€ ~ file: products.ejs:45 ~ ViewProducts ~ allUserRecord:", allUserRecord)

                let html = ` <div class="container mt-4">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Product Id</th>
                                <th>Product Name</th>
                                <th>Product Price</th>
                                <th>Product Category</th>
                                <th>Product Description</th>
                                <th>Created At</th>
                                <th class="text-center">Action</th>
                            </tr>

                        </thead>
                        <tbody class="data">

                        </tbody>
                    </table>
                </div>`
                let container = document.querySelector('.viewProduct');
                container.innerHTML = html;

                let ct = ``

                allUserRecord.forEach((element, i) => {
                    let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${element.id}</td>
                        <td>${element.name}</td>
                        <td>${element.price}</td>
                        <td>${element.catagoryName}</td>
                        <td>${element.description}</td>
                        <td>${element.createdAt}</td>
                        <td><a id="${element.id}" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
                    ct += htmlSegment;
                });
                let okycontainer = document.querySelector('.data');
                okycontainer.innerHTML = ct;

            }
        }
        ViewProducts()

        async function AddProducts() {
            let ccontainer = document.querySelector('.viewProduct');
            ccontainer.innerHTML = '';
            const rec = await fetch('/categories/getcategory');
            const userRecord = await rec.json();
            if (userRecord.status == 200 && userRecord.data) {
                let allUserRecord = []
                allUserRecord = userRecord.data


                let html = '';
                let htmlSegment = `<div class="align-center"><form class="form-horizontal" onsubmit="return submitForm(event, this)">
            <fieldset>
            <!-- Text input-->
            <div class="form-group">
            <label class="col-md-4 control-label" for="product_name">Product Name</label>  
            <div class="col-md-4">
            <input id="product_name" name="product_name" placeholder="Product Name" class="form-control input-md my-4" required="" type="text" required>
                
            </div>
            </div>
            <!-- Select Basic -->
            <div class="form-group">
            <label class="col-md-4 control-label" for="product_category">Product Category</label>
            <div class="col-md-4 my-4">
                <select id="product_categorie" name="product_categorie" class="form-control">
                    <option value="default" selected disabled>Select Category</option>
                   ${allUserRecord.map((data) => {
                    return `<option value=${data.name}>${data.name}</option>`
                }).join(",")}
                         
                </select>
            </div>
            </div>

            <!-- Text input-->
            <div class="form-group">
            <label class="col-md-4 control-label" for="available_quantity">Available Quantity</label>  
            <div class="col-md-4 my-4">
            <input id="available_quantity" name="available_quantity" placeholder="Available Quantity" class="form-control input-md" required type="number">
                
            </div>
            <div class="form-group">
            <label class="col-md-4 control-label" for="product_price">Product Price</label>  
            <div class="col-md-4 my-4">
            <input id="product_price" name="product_price" placeholder="Price" class="form-control input-md" required type="number">
                
            </div>
            </div>
            <!-- Textarea -->
            <div class="form-group">
            <label class="col-md-4 control-label" for="product_description">Product Description</label>
            <div class="col-md-4 my-4">                     
                <input id="product_description" name="product_description" placeholder="" class="form-control input-md" required type="text">
          
            </div>
            <!-- File Button --> 
            <div class="form-group">
            <label class="col-md-4 control-label" for="filebutton">main_image</label>
            <div class="col-md-4 my-4">
                <input required id="filebutton" name="filebutton" class="input-file" type="file">
            </div>
            </div>
            <div class="form-group">
            <div class="col-md-4 my-4">
                <input class='bg-success p-2 rounded-pill text-light' type="submit" value="Add Product" id="submit">
            </div>
            </div>

            </fieldset>
            </form>
            </div>`;

                html += htmlSegment;
                let container = document.querySelector('.addProduct');
                container.innerHTML = html;
                html += htmlSegment;
            }



        }
        async function submitForm(e, form) {
            e.preventDefault();
            const submitForm = await fetch('/product/addProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    product_name: form.product_name.value, product_categorie: form.product_categorie.value, available_quantity: form.available_quantity.value, product_description: form.product_description.value, filebutton: form.filebutton.value, product_price: form.product_price.value
                })
            })
            const results = await submitForm.json();
            console.log(results);
            if (results.status == 200) {

                const Toast2 = Swal.mixin({
                    toast: true,
                    position: 'top',
                    showConfirmButton: false,
                    timer: 7000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast2.fire({
                    icon: 'success',
                    title: `${results.message}`
                })
                document.querySelector('#product_name').value = ""
                document.querySelector('#product_categorie').value = ""
                document.querySelector('#available_quantity').value = ""
                document.querySelector('#product_description').value = ""
                document.querySelector('#product_price').value = ""
                document.querySelector('#filebutton').value = ""
            }
        }
        async function DeleteAction(e) {

            console.log(e.id);
            const submitForm = await fetch('/product/deleteRecord', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: e.id
                })
            })
            const results = await submitForm.json();
            if (results.status === 200) {
                const Toast2 = Swal.mixin({
                    toast: true,
                    position: 'top',
                    showConfirmButton: false,
                    timer: 7000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast2.fire({
                    icon: 'success',
                    title: `${results.message}`
                })
                ViewProducts()
            }
        }
    </script>