<%- include("dashboard") -%>
<style>
  .pagination a {
    color: black;
    float: left;
    padding: 8px 16px;
    text-decoration: none;
    transition: background-color 0.3s;
  }

  .pagination a.active {
    background-color: dodgerblue;
    color: white;
  }

  .pagination a:hover:not(.active) {
    background-color: #ddd;
  }
</style>
<div class="container">
  <div class="input-group d-flex my-3">
    <div class="form-outline">
      <input
        type="search"
        placeholder="Search"
        id="searchInput"
        class="form-control"
        oninput="search()"
        autofocus="true"
      />
    </div>
    <button type="button" class="btn btn-primary">
      <i class="fa fa-search"></i>
    </button>
  </div>
  <div class="blur-ui p-3 pb-0 bg-gray">
    <h4 class="text-black">Products</h4>
    <ul class="nav nav-tabs">
      <li class="nav-item w-50 text-center all-center">
        <a
          class="nav-link w-100 fw-600 active"
          data-bs-toggle="tab"
          href="#View-Products"
          id="VP"
          onclick="ViewProducts()"
        >
          <span> View Products </span>
        </a>
      </li>
      <li class="nav-item w-50 text-center all-center">
        <a
          class="nav-link w-100 fw-600"
          data-bs-toggle="tab"
          href="# Add-Product"
          id="AP"
          onclick="AddProducts()"
        >
          <span> Add Product </span>
        </a>
      </li>
    </ul>
  </div>
  <div class="addProduct"></div>
  <div class="viewProduct"></div>
</div>
<div class="container">
  <div class="pagination">
    <a href="#">&laquo;</a>

    <a href="#">&raquo;</a>
  </div>
</div>
<script
  src="https://kit.fontawesome.com/a076d05399.js"
  crossorigin="anonymous"
></script>
<script>
  let catData = '';
  let searchQuery = '';
  const search = async (value) => {
    var val = document.getElementById('searchInput').value;
    searchQuery = val;
    if (!val) {
      ViewProducts();
    }
    let searches = await fetch(`/product/search?val=${val}`);
    let Searchdata = await searches.json();
    let SearchResults = Searchdata.data;
    console.log(
      'ðŸš€ ~ file: products.ejs:70 ~ search ~ SearchResults:',
      SearchResults,
    );

    let html = ` <div class="container mt-4">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Product Id</th>
                                <th>Product Name</th>
                                <th>Product Price</th>
                                <th>Product Category</th>
                                <th>Product Description</th>
                                <th>Created At</th>
                                <th class="text-center">Edit</th>
                                <th class="text-center">Action</th>
                            </tr>

                        </thead>
                        <tbody class="data">
                        

                        </tbody>
                    </table>
                </div>`;

    let container = document.querySelector('.viewProduct');
    container.innerHTML = html;

    let ct = ``;

    SearchResults.forEach((element, i) => {
      let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${element.id}</td>
                        <td>${element.name}</td>
                        <td>${element.price}</td>
                        <td>${element.catagoryName}</td>
                        <td>${element.description}</td>
                        <td>${element.createdAt}</td>
                        <td><a id="${
                          element.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          element.id
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
      ct += htmlSegment;
    });
    let okycontainer = document.querySelector('.data');
    okycontainer.innerHTML = ct;
  };
  const selectLimit = () => {
    ViewProducts(parseInt(document.querySelector('#limit').value));
  };
  async function ViewProducts(val = 5, search = '') {
    let ccontainer = document.querySelector('.addProduct');
    let viewCon = document.querySelector('.viewProduct');
    viewCon.innerHTML = catData;
    ccontainer.innerHTML = '';
    const rec = await fetch(`/product/getProductpage?page=1&limit=${val}`);
    const recs = await fetch(`/product/getProducts`);

    const userRecord = await rec.json();
    const allRecord = await recs.json();
    const totalLength = allRecord.data.data.length;

    if (userRecord.status == 200 && userRecord.data) {
      let allUserRecord = [];
      allUserRecord = userRecord.data.data;
      let iterableProducts = [];

      let html = ` <div class="container mt-4">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>#  &nbsp; <select id="limit" name="limit" onchange="selectLimit()">
                                    <option selected disabled>limit</option>
                            <option  value="5">5</option>
                            <option value="2">2</option>
                            <option value="15">15</option>
                            <option value="20">20</option>

                                    </select></th>
                                <th>Product Id</th>
                                <th>Product Name</th>
                                <th>Product Price</th>
                                <th>Product Category</th>
                                <th>Product Description</th>
                                <th>Created At</th>
                                <th class="text-center">Edit</th>
                                <th class="text-center">Action</th>
                            </tr>

                        </thead>
                        <tbody class="data">
                           

                        </tbody>
                    </table>
                </div>`;

      let container = document.querySelector('.viewProduct');
      container.innerHTML = html;
      let limit = document.querySelector('#limit').value;

      let ct = ``;

      allUserRecord.forEach((element, i) => {
        let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${element.id}</td>
                        <td>${element.name}</td>
                        <td>${element.price}</td>
                        <td>${element.catagoryName}</td>
                        <td>${element.description}</td>
                        <td>${element.createdAt}</td>
                        <td><a id="${
                          element.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          element.id
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
        ct += htmlSegment;
      });
      let okycontainer = document.querySelector('.data');
      okycontainer.innerHTML = ct;

      let allPagesHtml = ``;

      for (let i = 1; i <= Math.ceil(totalLength / val); i++) {
        let pageTags = `<a class="page-link" onclick="fetchData(${i},${val})" >${i}</a> `;
        allPagesHtml += pageTags;
      }
      let pagesSelect = document.querySelector('.pagination');
      pagesSelect.innerHTML = allPagesHtml;
    }
  }
  async function fetchData(i, limit) {
    console.log(`/product/getProductpage?page=${i}&limit=${limit}`);
    const fetchRecord = await fetch(
      `/product/getProductpage?page=${i}&limit=${limit}`,
    );
    const fetchResult = await fetchRecord.json();
    let NextProducts = [];
    NextProducts = fetchResult.data.data;
    let html = ` <div class="container mt-4">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>#  &nbsp; <select id="limit"                  name="limit" onchange="selectLimit()">
                                    <option selected disabled>limit</option>
                            <option  value="5">5</option>
                            <option value="2">2</option>
                            <option value="15">15</option>
                            <option value="20">20</option>

                                    </select></th>
                                <th>Product Id</th>
                                <th>Product Name</th>
                                <th>Product Price</th>
                                <th>Product Category</th>
                                <th>Product Description</th>
                                <th>Created At</th>
                                <th class="text-center">Edit</th>
                                <th class="text-center">Action</th>
                            </tr>

                        </thead>
                        <tbody class="data">
                        

                        </tbody>
                    </table>
                </div>`;

    let container = document.querySelector('.viewProduct');
    container.innerHTML = html;

    let ct = ``;

    NextProducts.forEach((element, i) => {
      let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${element.id}</td>
                        <td>${element.name}</td>
                        <td>${element.price}</td>
                        <td>${element.catagoryName}</td>
                        <td>${element.description}</td>
                        <td>${element.createdAt}</td>
                        <td><a id="${
                          element.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          element.id
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
      ct += htmlSegment;
    });
    let okycontainer = document.querySelector('.data');
    okycontainer.innerHTML = ct;

    let allPagesHtml = ``;

    for (let i = 1; i <= Math.ceil(totalLength / val); i++) {
      console.log('ðŸš€ ~ file: products.ejs:138 ~ ViewProducts ~ val:', val);
      let pageTags = `<a class="page-link" onclick="fetchData(${i},${val})" >${i}</a> `;
      allPagesHtml += pageTags;
    }
    let pagesSelect = document.querySelector('.pagination');
    pagesSelect.innerHTML = allPagesHtml;
  }
  ViewProducts();
  async function AddProducts() {
    document.querySelectorAll('.pagination');
    // document.getElementsByClassName('.pagination')
    let ccontainer = document.querySelector('.viewProduct');
    ccontainer.innerHTML = '';
    const rec = await fetch('/categories/getcategory');
    const userRecord = await rec.json();
    if (userRecord.status == 200 && userRecord.data) {
      let allUserRecord = [];
      allUserRecord = userRecord.data;

      let html = '';
      let htmlSegment = `< div class= "align-center" > <form class="form-horizontal" onsubmit="return submitForm(event, this)">
                        <fieldset>
            <!-- Text input-->
                            <div class="form-group">
                                <label class="col-md-4 control-label" for="product_name">Product Name</label>
                                <div class="col-md-4">
                                    <input id="product_name" name="product_name" placeholder="Product Name" class="form-control input-md my-4" required="" type="text" required>

                                </div>
                            </div>
                            <!-- Select Basic -->
                            <div class="form-group">
                                <label class="col-md-4 control-label" for="product_category">Product Category</label>
                                <div class="col-md-4 my-4">
                                    <select id="product_categorie" name="product_categorie" class="form-control">
                                        <option value="default" selected disabled>Select Category</option>
                                        ${allUserRecord
                                          .map((data) => {
                                            return `<option value=${data.name}>${data.name}</option>`;
                                          })
                                          .join(',')}

                                    </select>
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group">
                                <label class="col-md-4 control-label" for="available_quantity">Available Quantity</label>
                                <div class="col-md-4 my-4">
                                    <input id="available_quantity" name="available_quantity" placeholder="Available Quantity" class="form-control input-md" required type="number">

                                </div>
                                <div class="form-group">
                                    <label class="col-md-4 control-label" for="product_price">Product Price</label>
                                    <div class="col-md-4 my-4">
                                        <input id="product_price" name="product_price" placeholder="Price" class="form-control input-md" required type="number">

                                    </div>
                                </div>
                                <!-- Textarea -->
                                <div class="form-group">
                                    <label class="col-md-4 control-label" for="product_description">Product Description</label>
                                    <div class="col-md-4 my-4">
                                        <input id="product_description" name="product_description" placeholder="" class="form-control input-md" required type="text">

                                    </div>
                                    <!-- File Button -->
                                    <div class="form-group">
                                        <label class="col-md-4 control-label" for="filebutton">main_image</label>
                                        <div class="col-md-4 my-4">
                                            <input required id="filebutton" name="filebutton" class="input-file" type="file">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-4 my-4">
                                            <input class='bg-success p-2 rounded-pill text-light' type="submit" value="Add Product" id="submit">
                                        </div>
                                    </div>

                                </fieldset>
                            </form>
                        </div>`;

      html += htmlSegment;
      let container = document.querySelector('.addProduct');
      container.innerHTML = html;
      html += htmlSegment;
    }
  }
  async function submitForm(e, form) {
    e.preventDefault();
    const submitForm = await fetch('/product/addProduct', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        product_name: form.product_name.value,
        product_categorie: form.product_categorie.value,
        available_quantity: form.available_quantity.value,
        product_description: form.product_description.value,
        filebutton: form.filebutton.value,
        product_price: form.product_price.value,
      }),
    });
    const results = await submitForm.json();
    console.log(results);
    if (results.status == 200) {
      const Toast2 = Swal.mixin({
        toast: true,
        position: 'top',
        showConfirmButton: false,
        timer: 7000,
        timerProgressBar: true,
        didOpen: (toast) => {
          toast.addEventListener('mouseenter', Swal.stopTimer);
          toast.addEventListener('mouseleave', Swal.resumeTimer);
        },
      });

      Toast2.fire({
        icon: 'success',
        title: `${results.message}`,
      });
      document.querySelector('#product_name').value = '';
      document.querySelector('#product_categorie').value = '';
      document.querySelector('#available_quantity').value = '';
      document.querySelector('#product_description').value = '';
      document.querySelector('#product_price').value = '';
      document.querySelector('#filebutton').value = '';
    }
  }
  async function DeleteAction(e) {
    alert('Are you sure you want to delete ?');
    console.log(e.id);
    const submitForm = await fetch('/product/deleteRecord', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        id: e.id,
      }),
    });
    const results = await submitForm.json();
    if (results.status === 200) {
      const Toast2 = Swal.mixin({
        toast: true,
        position: 'top',
        showConfirmButton: false,
        timer: 7000,
        timerProgressBar: true,
        didOpen: (toast) => {
          toast.addEventListener('mouseenter', Swal.stopTimer);
          toast.addEventListener('mouseleave', Swal.resumeTimer);
        },
      });

      Toast2.fire({
        icon: 'success',
        title: `${results.message}`,
      });
      ViewProducts();
    }
  }
  async function EditAction(target) {
    window.location.assign(`/product/edit-product?id=${target.id}`);
  }
</script>
