<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
    />
    <title>Dashboard</title>
  </head>
  <style>
    .pagination a {
      color: black;
      float: left;
      padding: 8px 16px;
      text-decoration: none;
      transition: background-color 0.3s;
    }

    .pagination a.active {
      background-color: dodgerblue;
      color: white;
    }

    .pagination a:hover:not(.active) {
      background-color: #ddd;
    }
  </style>

  <body>
    <div class="container"></div>

    <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
      <div class="container-fluid">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" href="/dashboard">Admin Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/dashboard/listUsers">Users</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/product">Products</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/categories">Catagories</a>
          </li>
        </ul>

        <ul class="d-flex m-0">
          <div class="roles"></div>
          <div class="create-user"></div>
          <div>
            <li class="nav-item mx-3 bg-light p-2 rounded-pill">
              <a class="nav-link" href="/dashboard/logout">Log-Out</a>
            </li>
          </div>
        </ul>
      </div>
    </nav>
    <div class="input-group d-flex my-3 mx-5">
      <div class="form-outline">
        <input
          type="search"
          placeholder="Search"
          id="searchInput"
          class="form-control"
          oninput="search()"
          autofocus="true"
        />
      </div>
    </div>
    <div class="container mt-4">
      <div class="table-responsive">
        <table class="table table-hover">
          <thead>
            <tr>
              <th>
                <div class="d-flex">
                  #
                  <select
                    class="mx-2"
                    id="limit"
                    name="limit"
                    onchange="selectLimit()"
                  >
                    <option selected disabled>limit</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                    <option value="20">20</option>
                  </select>
                </div>
              </th>
              <th>User-ID</th>
              <th>Name</th>
              <th>Email</th>
              <th>Role</th>
              <th>Created At</th>
              <th>Edit</th>

              <th class="text-center">Action</th>
            </tr>
          </thead>
          <tbody class="userData"></tbody>
        </table>
      </div>
    </div>
    <div class="container">
      <div class="pagination">
        <a href="#">&laquo;</a>

        <a href="#">&raquo;</a>
      </div>
    </div>
  </body>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.all.min.js"></script>
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.min.css"
  />
</html>
<script>
  const search = async (value) => {
    let val = document.getElementById('searchInput').value;

    if (!val) {
      fetchUserData();
    }
    let searches = await fetch(`/dashboard/user/search/data?val=${val}`);
    let Searchdata = await searches.json();
    let SearchResults = Searchdata.data;

    let html = '';

    SearchResults.forEach((user, i) => {
      if (user.roleId == 2) {
        let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${user.id}</td>
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>User</td>
                        <td>${user.created_at}</td>
                        <td><a id="${
                          user.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          user.userId
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
        i++;
        html += htmlSegment;
      } else {
        let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${user.id}</td>
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>Admin</td>
                        <td>${user.created_at}</td>
                        <td><a id="${
                          user.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          user.userId
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
        i++;
        html += htmlSegment;
      }
    });
    let container = document.querySelector('.userData');
    container.innerHTML = html;
  };
  const selectLimit = () => {
    fetchUserData(parseInt(document.querySelector('#limit').value));
  };
  async function fetchUserData(val = 5) {
    console.log(`/dashboard/UserRecords?page=1&limit=${val}`);
    const rec = await fetch(`/dashboard/UserRecords?page=1&limit=${val}`);
    const results = await fetch(`/dashboard/UserRecords/length`);

    const userRecord = await rec.json();
    const AllRecords = await results.json();
    const TotalRecords = AllRecords.data.length;

    if (userRecord.status == 200 && userRecord.data) {
      let allUserRecord = [];
      allUserRecord = userRecord.data;
      console.log('allusers', allUserRecord);

      let html = '';

      allUserRecord.forEach((user, i) => {
        if (user.roleId == 2) {
          let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${user.userId}</td>
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>User</td>
                        <td>${user.created_at}</td>
                        <td><a id="${
                          user.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          user.userId
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
          i++;
          html += htmlSegment;
        } else {
          let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${user.userId}</td>
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>Admin</td>
                        <td>${user.created_at}</td>
                        <td><a id="${
                          user.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          user.userId
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
          i++;
          html += htmlSegment;
        }
      });
      let container = document.querySelector('.userData');

      container.innerHTML = html;
      let allPagesHtml = ``;

      for (let i = 1; i <= Math.ceil(TotalRecords / val); i++) {
        let pageTags = `<a class="page-link" onclick="fetchPaginationData(${i},${val})" >${i}</a> `;
        allPagesHtml += pageTags;
      }
      let pagesSelect = document.querySelector('.pagination');
      pagesSelect.innerHTML = allPagesHtml;
    }
  }
  async function fetchPaginationData(i, limit) {
    const rec = await fetch(`/dashboard/UserRecords?page=${i}&limit=${limit}`);
    const userRecord = await rec.json();
    let html = ``;
    let allPaginatedRecord = [];
    allPaginatedRecord = userRecord.data;

    allPaginatedRecord.forEach((user, i) => {
      if (user.roleId == 2) {
        let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${user.userId}</td>
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>User</td>
                        <td>${user.created_at}</td>
                        <td><a id="${
                          user.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          user.userId
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
        i++;
        html += htmlSegment;
      } else {
        let htmlSegment = `<tr>
                        <td>${i + 1}</td>
                        <td>${user.userId}</td>
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>Sub-Admin</td>
                        <td>${user.created_at}</td>
                        <td><a id="${
                          user.id
                        }"class="nav-link bg-info text-center text-white rounded-pill" onClick ="EditAction(this)"><i class="bi bi-pen-fill text-dark"></i></a></td>
                        <td><a id="${
                          user.userId
                        }" class="nav-link bg-danger text-center text-white rounded-pill" onClick ="DeleteAction(this)">Delete</a></td>
                    </tr>`;
        i++;
        html += htmlSegment;
      }
    });
    let container = document.querySelector('.userData');
    container.innerHTML = html;
  }
  fetchUserData();
  async function DeleteAction(e) {
    e.preventDefault();
    console.log(e.id);
    const submitForm = await fetch('/dashboard/deleteRecord', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        id: e.id,
      }),
    });
    const results = await submitForm.json();
    if (results.status === 200) {
      const Toast2 = Swal.mixin({
        toast: true,
        position: 'top',
        showConfirmButton: false,
        timer: 7000,
        timerProgressBar: true,
        didOpen: (toast) => {
          toast.addEventListener('mouseenter', Swal.stopTimer);
          toast.addEventListener('mouseleave', Swal.resumeTimer);
        },
      });

      Toast2.fire({
        icon: 'success',
        title: `${results.message}`,
      });
      fetchUserData();
    }
  }

  async function EditAction(target) {
    window.location.assign(`/dashboard/user/?id=${target.id}`);
  }

  function checkDashUser() {
    let DashUser = JSON.parse(localStorage.getItem('data'));
    console.log(DashUser.userRole);
    if (DashUser.userRole == 1) {
      let html = ` <li class="nav-item  bg-light p-2 rounded-pill"><a class="nav-link" href="/dashboard/listRole">Roles</a></li> `;
      let ccontainer = document.querySelector('.roles');
      ccontainer.innerHTML += html;
      let htmlSegment = `    <li class="nav-item mx-3  bg-light p-2 rounded-pill"><a class="nav-link" href="/dashboard/createUser">Create-User</a></li>;`;
      let container = document.querySelector('.create-user');
      container.innerHTML += htmlSegment;
    }
  }
  checkDashUser();
</script>
